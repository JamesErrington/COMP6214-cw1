{"version":3,"sources":["components/UKMap.jsx","components/BarChart.jsx","components/StackedBarChart.jsx","components/VisualFrame.jsx","components/MainFrame.jsx","components/DataCleaning.jsx","components/DataModelling.jsx","components/DataVisualisation.jsx","components/TextFrame.jsx","App.js","index.js","data/Comp6214Data.csv"],"names":["colors","NEAS","EAST","NWES","YORH","EMID","WMID","LOND","SWES","SEAS","NIRE","SCOT","WALE","UKMap","selectedRegion","handleSelectRegion","parentRef","useRef","d3Ref","useComponentSize","width","height","useEffect","svg","d3","current","attr","on","d","selectAll","remove","projection","center","rotate","parallels","scale","Math","min","translate","path","append","data","features","enter","properties","EER13NM","style","stopPropagation","this","transition","duration","className","ref","BarChart","margin","paddedHeight","top","bottom","paddedWidth","left","right","max","value","g","x","domain","range","call","y","map","label","padding","bandwidth","StackedBarChart","percentage","filteredSubgroup","setFilteredSubgroup","useState","hoveredSubgroup","setHoveredSubgroup","axes","setAxes","normalizedData","rawData","forEach","newDatum","total","Number","MAX_VALUE","subgroups","subgroup","parseInt","parseFloat","push","useableData","groups","e","reduce","acc","elem","tickFormat","color","legend","i","indexOf","parentNode","datum","text","node","getBBox","stackedData","keys","key","regionOptions","fieldOptions","VisualFrame","selectedField","setSelectedField","setPercentage","selectedData","useMemo","inputData","formatData","regionLabel","find","region","onChange","event","target","options","selectedIndex","option","id","type","name","checked","htmlFor","MainFrame","setRegion","useScrollPosition","prevPos","currPos","opacity","window","pageYOffset","innerHeight","href","DataCleaning","TextFrame","a","csvData","grouped","undefined","ReactDOM","render","loading","setIsLoading","setRawData","loadData","then","result","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e9d320ac.chunk.js","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport useComponentSize from \"@rehooks/component-size\";\n\nimport data from \"../data/eer-simple.json\";\n\nconst colors = {\n  NEAS: \"#C52233\",\n  EAST: \"#C52233\",\n  NWES: \"#C52233\",\n  YORH: \"#C52233\",\n  EMID: \"#C52233\",\n  WMID: \"#C52233\",\n  LOND: \"#C52233\",\n  SWES: \"#C52233\",\n  SEAS: \"#C52233\",\n  NIRE: \"#8CC084\",\n  SCOT: \"#6C91C2\",\n  WALE: \"#FFC15E\"\n};\n\nexport default function UKMap({ selectedRegion, handleSelectRegion }) {\n  const parentRef = useRef(null);\n  const d3Ref = useRef(null);\n\n  const { width, height } = useComponentSize(parentRef);\n\n  useEffect(() => {\n    const svg = d3\n      .select(d3Ref.current)\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .on(\"click\", function(d) {\n        handleSelectRegion(\"\")\n      })\n\n    svg.selectAll(\"*\").remove();\n\n    const projection = d3\n      .geoAlbers()\n      .center([0, 55.4])\n      .rotate([4.4, 0])\n      .parallels([50, 60])\n      .scale(Math.min(height, width) * 5)\n      .translate([width / 2, height / 2]);\n\n    const path = d3.geoPath().projection(projection);\n\n    svg\n      .append(\"g\")\n      .selectAll(\"path\")\n      .data(data.features)\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", path)\n      .attr(\"id\", ({ properties }) => properties.EER13NM)\n      .style(\"stroke\", \"black\")\n      .attr(\"fill\", ({ properties }) => colors[properties.EER13NM])\n      .on(\"click\", function() {\n        d3.event.stopPropagation()\n        handleSelectRegion(d3.select(this).attr(\"id\"));\n      });\n  }, [handleSelectRegion, height, width]);\n\n  useEffect(() => {\n    if (selectedRegion === \"\") {\n      d3.select(d3Ref.current)\n        .selectAll(\"path\")\n        .transition()\n        .duration(200)\n        .style(\"opacity\", 1);\n    } else {\n      d3.select(d3Ref.current)\n        .selectAll(\"path\")\n        .transition()\n        .duration(200)\n        .style(\"opacity\", 0.3);\n\n      d3.select(`#${selectedRegion}`)\n        .transition()\n        .duration(200)\n        .style(\"opacity\", 1);\n    }\n  }, [selectedRegion]);\n\n  return (\n    <div className=\"map-holder\" ref={parentRef}>\n      <svg className=\"uk-map\" ref={d3Ref} />\n    </div>\n  );\n}\n","// Adapted from tutorials at https://www.d3-graph-gallery.com/barplot.html\nimport React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport useComponentSize from \"@rehooks/component-size\";\n\nexport default function BarChart({ data, margin }) {\n  const parentRef = useRef(null);\n  const d3Ref = useRef(null);\n\n  const { width, height } = useComponentSize(parentRef);\n\n  useEffect(() => {\n    if (width > 0 && height > 0 && data) {\n      const paddedHeight = height - margin.top - margin.bottom;\n      const paddedWidth = width - margin.left - margin.right;\n\n      const max = d3.max(data, function(d) {\n        return d.value;\n      });\n\n      const svg = d3.select(d3Ref.current);\n\n      svg.selectAll(\"*\").remove();\n\n      svg.attr(\"width\", width).attr(\"height\", height);\n\n      // var tooltip = d3\n      //   .select(\"body\")\n      //   .append(\"div\")\n      //   .attr(\"class\", \"tooltip\")\n      //   .style(\"visibility\", \"hidden\");\n\n      const g = svg\n        .append(\"g\")\n        .attr(\"transform\", `translate(0, ${margin.top})`);\n\n      const x = d3\n        .scaleLinear()\n        .domain([0, max])\n        .range([0, paddedWidth]);\n\n      g.append(\"g\")\n        .attr(\"transform\", `translate(${margin.left}, ${paddedHeight})`)\n        .call(d3.axisBottom(x));\n\n      const y = d3\n        .scaleBand()\n        .domain(data.map(d => d.label))\n        .range([0, paddedHeight])\n        .padding(0.2);\n\n      g.append(\"g\")\n        .attr(\"transform\", `translate(${margin.left},0)`)\n        .call(d3.axisLeft(y));\n\n      g.selectAll(\"bar-chart\")\n        .data(data)\n        .enter()\n        .append(\"rect\")\n        .attr(\"x\", d => x(0) + margin.left)\n        .attr(\"y\", d => y(d.label))\n        .attr(\"width\", d => x(0))\n        .attr(\"height\", y.bandwidth())\n        .attr(\"fill\", \"#69b3a2\");\n      // .on(\"mouseover\", function(d) {\n      //   return tooltip\n      //     .style(\"visibility\", \"visible\")\n      //     .style(\"top\", d3.event.pageY - 20 + \"px\")\n      //     .style(\"left\", d3.event.pageX - 50 + \"px\")\n      //     .html(`<strong>${d.label}</strong>: ${d.value}`);\n      // })\n      // .on(\"mousemove\", function(d) {\n      //   return tooltip\n      //     .style(\"top\", d3.event.pageY - 20 + \"px\")\n      //     .style(\"left\", d3.event.pageX - 50 + \"px\")\n      //     .html(`<strong>${d.label}</strong>: ${d.value}`);\n      // })\n      // .on(\"mouseout\", function() {\n      //   return tooltip.style(\"visibility\", \"hidden\");\n      // });\n\n      g.selectAll(\"rect\")\n        .transition()\n        .duration(800)\n        .attr(\"y\", d => y(d.label))\n        .attr(\"width\", d => x(d.value));\n    }\n  }, [width, height, margin, data]);\n\n  return (\n    <div className=\"chart-wrapper\" ref={parentRef}>\n      <svg ref={d3Ref} />\n    </div>\n  );\n}\n","// Adapted from tutorials at https://www.d3-graph-gallery.com/barplot.html\nimport React, { useEffect, useRef, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport useComponentSize from \"@rehooks/component-size\";\n\nexport default function StackedBarChart({\n  data,\n  margin,\n  percentage,\n  filteredSubgroup,\n  setFilteredSubgroup\n}) {\n  const parentRef = useRef(null);\n  const d3Ref = useRef(null);\n\n  const [hoveredSubgroup, setHoveredSubgroup] = useState(null);\n  const [axes, setAxes] = useState({});\n\n  const { width, height } = useComponentSize(parentRef);\n\n  useEffect(() => {\n    if (width > 0 && height > 0 && data) {\n      const normalizedData = [];\n      if (percentage) {\n        data.rawData.forEach(d => {\n          const newDatum = {\n            \"HE provider\": d[\"HE provider\"]\n          };\n          let total = 0;\n          let min = Number.MAX_VALUE;\n          for (const subgroup of data.subgroups) {\n            if (parseInt(d[subgroup]) < min) {\n              min = parseInt(d[subgroup]);\n            }\n          }\n          for (const subgroup of data.subgroups) {\n            total += parseFloat(d[subgroup]);\n          }\n          for (const subgroup of data.subgroups) {\n            newDatum[subgroup] = (d[subgroup] / total) * 100;\n          }\n          normalizedData.push(newDatum);\n        });\n      }\n\n      const useableData = {\n        groups: data.groups,\n        subgroups: data.subgroups,\n        rawData: percentage ? normalizedData : data.rawData\n      };\n\n      const paddedHeight = height - margin.top - margin.bottom;\n\n      const paddedWidth = width - margin.left - margin.right;\n\n      const max = d3.max(\n        useableData.rawData.map(d =>\n          useableData.subgroups\n            .map(e => d[e])\n            .reduce((acc, elem) => acc + parseFloat(elem), 0)\n        )\n      );\n\n      const svg = d3.select(d3Ref.current);\n\n      svg.selectAll(\"*\").remove();\n\n      svg\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .on(\"click\", function(d) {\n          setFilteredSubgroup(-1);\n        });\n\n      const g = svg\n        .append(\"g\")\n        .attr(\"transform\", `translate(0, ${margin.top})`);\n\n      var x = d3\n        .scaleLinear()\n        .domain([0, max])\n        .range([0, paddedWidth]);\n\n      g.append(\"g\")\n        .attr(\"id\", \"x-axis\")\n        .attr(\"transform\", `translate(${margin.left}, ${paddedHeight})`)\n        .call(d3.axisBottom(x).tickFormat(d => (percentage ? `${d}%` : d)));\n\n      var y = d3\n        .scaleBand()\n        .domain(useableData.groups)\n        .range([0, paddedHeight])\n        .padding(0.2);\n\n      g.append(\"g\")\n        .attr(\"id\", \"y-axis\")\n        .attr(\"transform\", `translate(${margin.left},0)`)\n        .call(d3.axisLeft(y));\n\n      setAxes({ x, y });\n\n      const color = d3\n        .scaleOrdinal()\n        .domain(useableData.subgroups)\n        .range(d3.schemeDark2);\n\n      const legendSize = 20;\n      const legend = svg.append(\"g\").attr(\"id\", \"legend\");\n      legend\n        .selectAll(\"legend-box\")\n        .data(useableData.subgroups)\n        .enter()\n        .append(\"g\")\n        .attr(\"class\", (d, i) => `subgroup-${i}`)\n        .append(\"rect\")\n        .attr(\"x\", width - margin.right + 10)\n        .attr(\"y\", (d, i) => i * (legendSize + 10))\n        .attr(\"width\", legendSize)\n        .attr(\"height\", legendSize)\n        .style(\"fill\", d => color(d))\n        .on(\"mouseover\", function(d) {\n          setHoveredSubgroup(\n            useableData.subgroups.indexOf(d3.select(this.parentNode).datum())\n          );\n        })\n        .on(\"mouseleave\", function(d) {\n          setHoveredSubgroup(null);\n        })\n        .on(\"click\", function(d) {\n          d3.event.stopPropagation();\n          setFilteredSubgroup(\n            useableData.subgroups.indexOf(d3.select(this.parentNode).datum())\n          );\n        });\n\n      legend\n        .selectAll(\"legend-labels\")\n        .data(useableData.subgroups)\n        .enter()\n        .append(\"text\")\n        .attr(\"x\", width - margin.right + legendSize + 20)\n        .attr(\"y\", (d, i) => i * (legendSize + 10) + legendSize / 1.7)\n        .style(\"fill\", d => color(d))\n        .text(d => d)\n        .attr(\"text-anchor\", \"left\")\n        .style(\"alignment-baseline\", \"middle\");\n\n      legend.attr(\n        \"transform\",\n        `translate(0,${height / 2 -\n          d3\n            .select(\"#legend\")\n            .node()\n            .getBBox().height /\n            2})`\n      );\n\n      const stackedData = d3.stack().keys(useableData.subgroups)(\n        useableData.rawData\n      );\n\n      g.append(\"g\")\n        .attr(\"id\", \"stacked-bar\")\n        .selectAll(\"g\")\n        .data(stackedData)\n        .enter()\n        .append(\"g\")\n        .attr(\"class\", (d, i) => `subgroup-${i}`)\n        .attr(\"fill\", function(d) {\n          return color(d.key);\n        })\n        .selectAll(\"rect\")\n        .data(function(d) {\n          return d;\n        })\n        .enter()\n        .append(\"rect\")\n        .attr(\"x\", function(d) {\n          return x(0) + margin.left;\n        })\n        .attr(\"y\", function(d) {\n          return y(d.data[\"HE provider\"]);\n        })\n        .attr(\"width\", function(d) {\n          return x(0);\n        })\n        .attr(\"height\", y.bandwidth())\n        .on(\"mouseover\", function(d) {\n          setHoveredSubgroup(\n            useableData.subgroups.indexOf(\n              d3.select(this.parentNode).datum().key\n            )\n          );\n        })\n        .on(\"mouseleave\", function(d) {\n          setHoveredSubgroup(null);\n        })\n        .on(\"click\", function(d) {\n          d3.event.stopPropagation();\n          setFilteredSubgroup(\n            useableData.subgroups.indexOf(\n              d3.select(this.parentNode).datum().key\n            )\n          );\n        });\n\n      g.selectAll(\"rect\")\n        .transition()\n        .duration(800)\n        .attr(\"x\", function(d) {\n          return x(d[0]) + margin.left;\n        })\n        .attr(\"y\", function(d) {\n          return y(d.data[\"HE provider\"]);\n        })\n        .attr(\"width\", function(d) {\n          return x(d[1]) - x(d[0]);\n        });\n    }\n  }, [width, height, margin, data, percentage, setFilteredSubgroup]);\n\n  useEffect(() => {\n    if (hoveredSubgroup === null) {\n      d3.select(d3Ref.current)\n        .selectAll(\"rect\")\n        .style(\"opacity\", 1);\n    } else {\n      d3.select(d3Ref.current)\n        .selectAll(\"rect\")\n        .style(\"opacity\", 0.3);\n\n      d3.select(d3Ref.current)\n        .selectAll(\".subgroup-\" + hoveredSubgroup)\n        .selectAll(\"rect\")\n        .style(\"opacity\", 1);\n    }\n  }, [hoveredSubgroup]);\n\n  useEffect(() => {\n    if (filteredSubgroup === -1) {\n      d3.select(\"#stacked-bar\")\n        .selectAll(\"rect\")\n        .transition()\n        .duration(800)\n        .attr(\"x\", d => axes.x(d[0]) + margin.left)\n        .attr(\"width\", d => axes.x(d[1]) - axes.x(d[0]))\n        .style(\"opacity\", 1);\n    } else {\n      d3.select(\"#stacked-bar\")\n        .selectAll(\"rect\")\n        .transition()\n        .duration(800)\n        .attr(\"x\", d => axes.x(0) + margin.left)\n        .attr(\"width\", 0)\n        .style(\"opacity\", 0);\n\n      d3.select(\"#stacked-bar\")\n        .selectAll(\".subgroup-\" + filteredSubgroup)\n        .selectAll(\"rect\")\n        .transition()\n        .duration(800)\n        .attr(\"x\", d => axes.x(0) + margin.left)\n        .attr(\"width\", d => axes.x(d[1]) - axes.x(d[0]))\n        .style(\"opacity\", 1);\n    }\n  }, [filteredSubgroup, margin, axes]);\n\n  return (\n    <div className=\"chart-wrapper\" ref={parentRef}>\n      <svg ref={d3Ref} />\n    </div>\n  );\n}\n","import React, { useState, useMemo } from \"react\";\n\nimport BarChart from \"./BarChart\";\nimport StackedBarChart from \"./StackedBarChart\";\n\nconst regionOptions = [\n  {\n    label: \"London\",\n    value: \"LOND\"\n  },\n  {\n    label: \"Wales\",\n    value: \"WALE\"\n  },\n  {\n    label: \"Northern Ireland\",\n    value: \"NIRE\"\n  },\n  {\n    label: \"Scotland\",\n    value: \"SCOT\"\n  },\n  {\n    label: \"Eastern\",\n    value: \"EAST\"\n  },\n  {\n    label: \"South West\",\n    value: \"SWES\"\n  },\n  {\n    label: \"South East\",\n    value: \"SEAS\"\n  },\n  {\n    label: \"North West\",\n    value: \"NWES\"\n  },\n  {\n    label: \"North East\",\n    value: \"NEAS\"\n  },\n  {\n    label: \"East Midlands\",\n    value: \"EMID\"\n  },\n  {\n    label: \"West Midlands\",\n    value: \"WMID\"\n  },\n  {\n    label: \"Yorkshire and Humberside\",\n    value: \"YORH\"\n  },\n  {\n    label: \"United Kingdom\",\n    value: \"\"\n  }\n];\n\nconst fieldOptions = [\n  {\n    label: \"Total Students\",\n    value: \"Total students\"\n  },\n  {\n    label: \"Gender\",\n    value: \"Gender\"\n  },\n  {\n    label: \"Age\",\n    value: \"Age\"\n  },\n  {\n    label: \"Disability\",\n    value: \"Disability\"\n  },\n  {\n    label: \"Ethnicity\",\n    value: \"Ethnicity\"\n  }\n];\n\nfunction formatData(inputData, selectedField) {\n  if (selectedField === \"Total students\") {\n    return inputData.map(d => ({\n      label: d[\"HE provider\"],\n      value: parseInt(d[selectedField])\n    }));\n  }\n\n  let subgroups = [];\n  switch (selectedField) {\n    case \"Gender\":\n      subgroups = [\"Female\", \"Male\", \"Other\"];\n      break;\n    case \"Age\":\n      subgroups = [\n        \"20 and under\",\n        \"21-24\",\n        \"25-29\",\n        \"30 and over\",\n        \"Age unknown\"\n      ];\n      break;\n    case \"Disability\":\n      subgroups = [\"Known to have a disability\", \"No known disability\"];\n      break;\n    case \"Ethnicity\":\n      subgroups = [\n        \"White\",\n        \"Black\",\n        \"Asian\",\n        \"Other ethnicity (including mixed)\",\n        \"Ethnicity not known\"\n      ];\n      break;\n    default:\n      break;\n  }\n\n  return {\n    rawData: inputData,\n    groups: inputData.map(d => d[\"HE provider\"]),\n    subgroups\n  };\n}\n\nexport default function VisualFrame({\n  rawData,\n  selectedRegion,\n  handleSelectRegion\n}) {\n  const [selectedField, setSelectedField] = useState({\n    label: \"Total Students\",\n    value: \"Total students\"\n  });\n  const [filteredSubgroup, setFilteredSubgroup] = useState(-1);\n  const [percentage, setPercentage] = useState(true);\n\n  const selectedData = useMemo(\n    () => formatData(rawData[selectedRegion], selectedField.value),\n    [rawData, selectedRegion, selectedField]\n  );\n  const regionLabel = regionOptions.find(\n    region => region.value === selectedRegion\n  ).label;\n\n  const margin = useMemo(\n    () => ({ top: 50, right: 250, bottom: 50, left: 250 }),\n    []\n  );\n\n  return (\n    <>\n      <div className=\"chart-title\">\n        <h1>\n          {regionLabel} - {selectedField.label}\n          {filteredSubgroup > -1\n            ? ` - ${selectedData.subgroups[filteredSubgroup]}`\n            : \"\"}\n        </h1>\n      </div>\n      <div className=\"chart-holder\">\n        {selectedField.value === \"Total students\" ? (\n          <BarChart data={selectedData} margin={margin} />\n        ) : (\n          <StackedBarChart\n            data={selectedData}\n            margin={margin}\n            percentage={percentage}\n            filteredSubgroup={filteredSubgroup}\n            setFilteredSubgroup={setFilteredSubgroup}\n          />\n        )}\n      </div>\n      <div className=\"filter-row\">\n        <div className=\"selection-row\">\n          <h3>Show me</h3>\n          <div>\n            <select\n              value={selectedField.value}\n              onChange={event =>\n                setSelectedField({\n                  value: event.target.value,\n                  label:\n                    event.target.options[event.target.options.selectedIndex]\n                      .text\n                })\n              }\n            >\n              {fieldOptions.map(option => (\n                <option key={option.value} value={option.value}>\n                  {option.label}\n                </option>\n              ))}\n            </select>\n          </div>\n          <h3>statistics for the</h3>\n          <div>\n            <select\n              value={selectedRegion}\n              onChange={event => handleSelectRegion(event.target.value)}\n            >\n              {regionOptions.map(region => (\n                <option key={region.value} value={region.value}>\n                  {region.label}\n                </option>\n              ))}\n            </select>\n          </div>\n          <h3>region</h3>\n        </div>\n        {selectedField.value !== \"Total students\" && (\n          <div className=\"percentage-row\">\n            <h3>as a</h3>\n            <div>\n              <input\n                id=\"percentage-radio\"\n                type=\"radio\"\n                name=\"percentage\"\n                value={true}\n                checked={percentage}\n                onChange={() => setPercentage(true)}\n              />\n              <label htmlFor=\"percentage-radio\">Percentage value</label>\n            </div>\n            <h3>or an</h3>\n            <div>\n              <input\n                id=\"absolute-radio\"\n                type=\"radio\"\n                name=\"percentage\"\n                value={false}\n                checked={!percentage}\n                onChange={() => setPercentage(false)}\n              />\n              <label htmlFor=\"absolute-radio\">Absolute value</label>\n            </div>\n            <h3>with</h3>\n            <div>\n              <select\n                value={filteredSubgroup}\n                onChange={event =>\n                  setFilteredSubgroup(parseInt(event.target.value))\n                }\n              >\n                <option key=\"all\" value={-1}>\n                  All\n                </option>\n                {selectedData.subgroups.map((subgroup, i) => (\n                  <option key={subgroup} value={parseInt(i)}>\n                    {subgroup}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <h3>filtered</h3>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n","import React, { useState, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport { useScrollPosition } from \"@n8tb1t/use-scroll-position\";\n\nimport { ReactComponent as ArrowIcon } from \"@fortawesome/fontawesome-free/svgs/solid/arrow-circle-up.svg\";\n\nimport UKMap from \"./UKMap\";\nimport VisualFrame from \"./VisualFrame\";\n\nexport default function MainFrame({ rawData }) {\n  const [selectedRegion, setRegion] = useState(\"\");\n\n  const d3Ref = useRef(null);\n\n  useScrollPosition(\n    ({ prevPos, currPos }) => {\n      const opacity = 1 - (1.5 * window.pageYOffset) / window.innerHeight;\n\n      d3.select(d3Ref.current).style(\"opacity\", opacity);\n    },\n    [window.innerHeight, window.pageYOffset]\n  );\n\n  return (\n    <div className=\"main-frame\" ref={d3Ref}>\n      <div className=\"map-and-chart-frame\">\n        <div className=\"map-frame\">\n          <UKMap\n            selectedRegion={selectedRegion}\n            handleSelectRegion={setRegion}\n          />\n        </div>\n        <div className=\"visual-frame\">\n          <VisualFrame\n            rawData={rawData}\n            selectedRegion={selectedRegion}\n            handleSelectRegion={setRegion}\n          />\n        </div>\n      </div>\n      <div className=\"arrow-frame\">\n        <div className=\"arrow-icon\">\n          <a href=\"#text-start\">\n            <ArrowIcon />\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { ReactComponent as BroomIcon } from \"@fortawesome/fontawesome-free/svgs/solid/broom.svg\";\n\nexport default function DataCleaning() {\n  return (\n    <div className=\"data-cleaning\">\n      <div className=\"text-icon clean-icon\">\n        <BroomIcon />\n      </div>\n      <h2>Data Cleaning</h2>\n      <p>\n        There were two main stages to the cleaning of the raw data: first the\n        erroneous cells were identified and corrected in the two sheets, and\n        then the data was transformed into a more useable CSV format by removing\n        superfluous cells and editing ambiguous headers.\n      </p>\n      <p>\n        To detect errors in the cells, the data was imported into Google Sheets\n        and the \"Data Validation\" function was used to detect values in the\n        table that were not valid whole numbers. An upper maximum of 100000 was\n        used in order to flag values that may be too large for manual review.\n        The \"EQ\" function was used to check if the \"INSTID\", \"UKPRN\", \"Region of\n        HE provider\", and \"HE provider\" were consistent between the two sheets.\n      </p>\n      <h4>Summary of errors in Sheet 1</h4>\n      <table>\n        <thead>\n          <tr>\n            <th>Cell</th>\n            <th>Erroneous Value</th>\n            <th>Corrected Value</th>\n            <th>Error type</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>CJ64</td>\n            <td>nil</td>\n            <td>0</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>CC104</td>\n            <td>Nil</td>\n            <td>0</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>CC105</td>\n            <td>NULL</td>\n            <td>0</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>CC106</td>\n            <td>ZERO</td>\n            <td>0</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>BX145</td>\n            <td>157575575775</td>\n            <td>1545</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>CJ182</td>\n            <td>fifteen</td>\n            <td>15</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>AK11</td>\n            <td>Total other EEC domicile</td>\n            <td>Total other EU domicile</td>\n            <td></td>\n          </tr>\n        </tbody>\n      </table>\n      <h4>Summary of errors in Sheet 2</h4>\n      <table>\n        <thead>\n          <tr>\n            <th>Cell</th>\n            <th>Erroneous Value</th>\n            <th>Corrected Value</th>\n            <th>Error type</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>D45</td>\n            <td>University of Derbyshire</td>\n            <td>University of Derby</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>U40</td>\n            <td>29430XYYTY</td>\n            <td>29430</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>L55</td>\n            <td>Nan</td>\n            <td>0</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>D99</td>\n            <td>Oxford Uni at Brookes</td>\n            <td>Oxford Brookes University</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>B101</td>\n            <td>32XDFRG87</td>\n            <td>10005127</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>C141</td>\n            <td>NARNIA</td>\n            <td>EAST</td>\n            <td></td>\n          </tr>\n        </tbody>\n      </table>\n      <p>\n        After the errors had been corrected, the data was further cleaned by\n        removing the special characters (†, §§, ‡) and all the extraneous\n        information at the top and bottom. The headers of Sheet 1 were cut down\n        to one single row in order to produce a proper CSV format, which\n        involved amending the headings to be more specific. Finally, the data\n        from the two sheets was merged into one single table.\n      </p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { ReactComponent as LinkIcon } from \"@fortawesome/fontawesome-free/svgs/solid/link.svg\";\n\nexport default function DataCleaning() {\n  return (\n    <div className=\"data-modelling\">\n      <div className=\"text-icon link-icon\">\n        <LinkIcon />\n      </div>\n      <h2>Data Modelling</h2>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { ReactComponent as ChartIcon } from \"@fortawesome/fontawesome-free/svgs/solid/chart-bar.svg\";\n\nexport default function DataCleaning() {\n  return (\n    <div className=\"data-visualisation\">\n      <div className=\"text-icon chart-icon\">\n        <ChartIcon />\n      </div>\n      <h2>Data Visualisation</h2>\n      <p>\n        The data I chose to visualise for this project all comes from Sheet 2 of\n        the original dataset, which is more about the different demographic\n        breakdowns of the universities. I chose this because I think it allows\n        for more interesting analysis of the different institutions, and is more\n        varied than Sheet 1 which just has information about the residency of\n        different stages of student.\n      </p>\n      <p>\n        The audience for this visualisation is anyone interested in learning\n        about and comparing demographic information about universities in\n        different regions of the UK. This could be for example a potential\n        student interesting in finding out the percentages of women at different\n        universities, or how the breakdown of ethnicities varies around the\n        country.\n      </p>\n      <p>\n        I used a map to present the different regions of the UK as this is a\n        very natural format for displaying geographical data, and allows for\n        easy interaction by clicking on the different regions. I used a standard\n        bar chart for the breakdown of total students as this dataset is a\n        simple 1 category -> 1 numerical value relationship, and bar charts make\n        it easy to compare values quickly and easily.\n      </p>\n      <p>\n        For the other demographic visualisations I used stacked bar charts, as\n        each groupig has multiple subgroups which form the stack. Whilst this\n        sort of data can be shown using a pie chart, the advantage of using\n        stacked bars is that it can display a lot of dense data very easily and\n        make it all comparable, which is very useful as some of the regions\n        (i.e. London) have a lot of universities. Using stacked bars also allows\n        for switching between percentage and absolute values very efficiently.\n      </p>\n      <p>\n        For interactivity, the ability to hover over groups in the stacked bars\n        and highlight just that group, and then futher being able to drill down\n        into the data aids enormously with comparisons, especially in data sets\n        with high variance between the universities. I also added functionality\n        to change the visual display using standard form options below the\n        chart, which aids with accessibility for example on mobile devices. I\n        arranged these controls as part of a natural language layout in order to\n        improve user experience as they can easily choose what they want to see\n        displayed, when compared with just a grid of dropdowns and radio\n        buttons.\n      </p>\n    </div>\n  );\n}\n","import React from \"react\";\n\n\nimport DataCleaning from \"./DataCleaning\";\nimport DataModelling from \"./DataModelling\";\nimport DataVisualisation from \"./DataVisualisation\";\n\nexport default function TextFrame() {\n  return (\n    <div id=\"text-start\" className=\"text-frame\">\n      <div className=\"text-title\">\n        <h1>Comp 6214 Open Data Coursework</h1>\n      </div>\n      <div className=\"text-overlay\">\n        <div className=\"main-text\">\n          <div className=\"what-text\">\n            <h2>What is this?</h2>\n            <p>\n              This site is a visualisation made for the COMP 6214 Open Data\n              Innovation module at the University of Southampton. It shows\n              information about the demographics of universities in the UK using\n              2017 data from <a href=\"https://www.hesa.ac.uk/\">HESA</a>.\n            </p>\n            <h2>What can I look at?</h2>\n            <p>\n              Information for different regions of the UK can be filtered by\n              clicking on the map on the left, or from the dropdown under the\n              chart. By default, total student numbers are shown but this can be\n              changed to show breakdowns by Gender, Age, Disability Status, and\n              Ethnicity.\n            </p>\n            <p>\n              Within each different demographic, the differnt groups can be\n              highlighted by hovering over the bars, or the legend on the right.\n              You can drill down into the data by clicking on a group to hide\n              the other bars, which can be useful to compare value in some\n              cases.\n            </p>\n            <p>\n              You can also change the displayed subgroup using the filters below\n              the chart, and choose between showing data as a percentage or the\n              absolute values.\n            </p>\n          </div>\n          <div className=\"how-text\">\n            <DataCleaning />\n            <DataModelling />\n            <DataVisualisation />\n          </div>\n          <div className=\"who-text\">\n            <h2>Who made this?</h2>\n            <p>Made by James Errington (jde1g16)</p>\n            <p>\n              Built using <a href=\"https://reactjs.org/\">React</a>,{\" \"}\n              <a href=\"https://d3js.org/\">D3.js</a>, and{\" \"}\n              <a href=\"https://fontawesome.com/\">FontAwesome</a>\n            </p>\n            <p>\n              UK GeoJSON sourced from{\" \"}\n              <a href=\"http://martinjc.github.io/UK-GeoJSON/\">\n                http://martinjc.github.io/UK-GeoJSON/\n              </a>\n            </p>\n            <p>\n              Various examples were examined and adapted, most notably from{\" \"}\n              <a href=\"https://www.d3-graph-gallery.com/\">d3-graph-gallery</a> (\n              <a href=\"https://www.d3-graph-gallery.com/barplot.html\">\n                Barplot\n              </a>{\" \"}\n              and{\" \"}\n              <a href=\"https://www.d3-graph-gallery.com/choropleth.html\">\n                Choloropleth Map\n              </a>\n              ),\n            </p>\n            <p>\n              <a href=\"https://bost.ocks.org/mike/map/\">\n                https://bost.ocks.org/mike/map/\n              </a>{\" \"}\n              and{\" \"}\n              <a href=\"https://towardsdatascience.com/command-line-cartography-uk-election-edition-4c2ba6054799\">\n                https://towardsdatascience.com/command-line-cartography-uk-election-edition-4c2ba6054799\n              </a>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\nimport csvData from \"./data/Comp6214Data.csv\";\n\nimport MainFrame from \"./components/MainFrame\";\nimport TextFrame from \"./components/TextFrame\";\n\nimport \"./App.scss\";\n\nasync function loadData() {\n  const data = await d3.csv(csvData);\n  const grouped = data.reduce((acc, elem) => {\n    const region = elem[\"Region of HE provider\"];\n    if (acc[region] === undefined) {\n      acc[region] = [];\n    }\n    acc[region].push(elem);\n    return acc;\n  }, {});\n\n  return grouped;\n}\n\nexport default function App() {\n  const [loading, setIsLoading] = useState(true);\n  const [rawData, setRawData] = useState({});\n\n  useEffect(() => {\n    loadData().then(result => {\n      setRawData(result);\n      setIsLoading(false);\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {loading === false && <MainFrame rawData={rawData} />}\n      <TextFrame />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/Comp6214Data.c2c388c8.csv\";"],"sourceRoot":""}